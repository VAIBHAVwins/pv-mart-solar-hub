// ENHANCED BY CURSOR AI: Recommended Firestore Security Rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // Allow vendors to read/write their own vendor document
    match /vendors/{vendorId} {
      allow read, write: if request.auth != null && request.auth.uid == vendorId;
    }
    // Allow users to create quote requests, and read their own
    match /quoteRequests/{quoteId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Only admin can update/delete
    }
    // Allow vendors to create quote responses
    match /quoteResponses/{responseId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update, delete: if false;
    }
    // Allow admin to read/write everything
    match /{document=**} {
      allow read, write: if request.auth != null && request.auth.token.email == 'ecogrid.ai@gmail.com';
    }
    // Allow public read access to blogPosts and siteContent
    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email == 'ecogrid.ai@gmail.com';
    }
    match /siteContent/{docId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email == 'ecogrid.ai@gmail.com';
    }
    // Allow public read access to images
    match /images/{imgId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email == 'ecogrid.ai@gmail.com';
    }
  }
} 